import type { NextPage } from 'next';
import Head from 'next/head';
import { trpc } from '../utils/trpc';
import { useState } from 'react';
import { ShoppingItem } from '@prisma/client';
import ItemModal from '../components/ItemModal';
import { HiX } from 'react-icons/hi';
import { motion } from 'framer-motion';
import Layout from '../components/layout';

const Home: NextPage = () => {
  const [modalOpen, setModalOpen] = useState<boolean>(false);
  const [chekedItems, setChekedItems] = useState<ShoppingItem[]>([]);
  const [items, setItems] = useState<ShoppingItem[]>([]);

  const { data: itemsData, isLoading } = trpc.useQuery(['items.getAllItems'], {
    onSuccess: (data) => {
      setItems(data);
      setChekedItems(data.filter((item) => item.checked));
    }
  });

  const { mutate: deleteItem } = trpc.useMutation(['items.deleteItem'], {
    onSuccess: (shoppingItem) => {
      setItems((prev) => prev.filter((item) => item.id !== shoppingItem.id));
    }
  });

  const { mutate: toggleChecked } = trpc.useMutation(['items.toggleChecked'], {
    onSuccess: (shoppingItem) => {
      if (chekedItems.some(item => item.id === shoppingItem.id)) {
        setChekedItems((prev) => prev.filter((item) => item.id !== shoppingItem.id));
      } else {
        setChekedItems((prev) => [...prev, shoppingItem]);
      }
    }
  });

  if (!itemsData || isLoading) return <p>Loading...</p>;

  return (
    <>
      <Head>
        <title>Shopping List</title>
        <meta name='description' content='Generated by create-t3-app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      {modalOpen && (
        <ItemModal setModalOpen={setModalOpen} setItems={setItems} />
      )}
      <Layout>
        <div className='flex justify-between'>
          <h2 className='text-2xl font-semibold'>Shopping List</h2>
          <button
            onClick={() => setModalOpen(true)}
            type='button'
            className='rounded-md bg-violet-500 p-2 text-white transition hover:bg-violet-600'
          >
            Add shopping item
          </button>
        </div>

        <ul className='mt-4'>
          {items.map((item) => {
            const { id, name } = item;
            return (
              <li
                key={id}
                className='flex items-center justify-between border-b border-gray-200 p-2'
              >
                <div className='relative'>
                  <div className='pointer-events-none origin-left absolute inset-0 flex items-center justify-center'>
                    <motion.div
                      initial={{ width: 0 }}
                      animate={{ width: chekedItems.some((item) => item.id === id) ? '100%' : 0 }}
                      transition={{ duration: 0.2, ease: 'easeInOut' }}
                      className='h-[2px] w-full -translate-y-px bg-red-500'
                    />
                  </div>
                  <span
                    onClick={() =>
                      toggleChecked({
                        id,
                        checked: chekedItems.some((item) => item.id === id)
                      })}
                  >
                    {name}
                  </span>
                </div>
                <HiX
                  onClick={() => deleteItem({ id })}
                  className='cursor-pointer text-lg text-red-500'
                />
              </li>
            );
          })}
        </ul>
      </Layout>
    </>
  );
};

export default Home;
